%Residential house power system model
%====================================

close all; %figures
clear;     %variables

disp(' ');
disp(' ');
disp('RES. HOUSE POWER SYSTEM MODEL V1');
disp('--------------------------------');


%% Data about electric consumption of residence house
%----------------------------------------------------
% Data for 1 year, energy packages [kWh] in 15 min intervals
load data778721HeatPump2022.mat; % Electric consumption of the heat pump
load data778721Other2022.mat;    % Electric consumption of all electric consumers EXCEPT heat pump
load data778721Total2022.mat;    % Electric consumption of all electric consumers (heat pump + other)

% DATA conversion (15 min -> 30 min)
% --- Electric energy 15 minut [kWh] --- %
E_15min_Total = data778721Total2022;                                   % Total consumption energy
E_15min_HeatPump = data778721HeatPump2022;                             % Heat pump energy
E_15min_Other = data778721Other2022;                                   % Other consumption energy

% --- Electric energy 30 minut[kWh]: merge 2 sample--- %
E_Total = E_15min_Total(1:2:end) + E_15min_Total(2:2:end);             % [kWh/30min]
E_HeatPump = E_15min_HeatPump(1:2:end) + E_15min_HeatPump(2:2:end);    % [kWh/30min]
E_Other = E_15min_Other(1:2:end) + E_15min_Other(2:2:end);             % [kWh/30min]

%Plot to check data consistency
%plot(E_Total - E_HeatPump - E_Other); % should be zero


% --- Electric power for every 30-min interval --- %
% Power = Energy package / interval duration (0.5 h)

% Electric consumption of all electric consumers EXCEPT heat pump
P_Other = E_Other / 0.5;        % [kW]

% Electric consumption of all electric consumers (heat pump + other)
%P_Total = E_Total / 0.5;        % [kWh/0.5h] → [kW]
%not needed

% Original electric consumption of the heat pump
% (when heat pump)
P_HeatPump_el_dem = E_HeatPump / 0.5;  % [kW]

% Thermal energy, generated by heat pump = demand for themal power
CoP = 3; % Heat pump Coefficient of Performance
P_HeatPump_th_dem = P_HeatPump_el_dem * CoP; % [kW]

%dEt_dem = E_HeatPump * CoP;     % Thermal demand [kWh]
dEt_dem = P_HeatPump_th_dem * 0.5;


%% Parameters - subject of test and optimization
PV_area=113.1;           % [m2] (power plant area)
BattCapacity=0*20;      % [kWh], Battery capacity
HsysCapacity=1*8000;   % [kWh], Hydrogen tank capacity
HsysInpPowerMax=11;     % [kW], max charge power (electrolyser power)
HsysInpPowerMin= HsysInpPowerMax*0.1; % kW min charge power (electrolyser power)
HsysOutPowerMax=12;     % [kW], max discsharge power (fuel cell power)
BattInpPowerMax=0*8;    % [kW], max battery charge power
BattOutPowerMax=0*8;    % [kW], max battery discharge power


%% Sun power (W/m2) 
%------------------
load sun2019.mat;
Time = sun2019.h;             % (17520 x 1)  Time(h) 0...8759.5 h increment 0.5 h
SunPower = 1e-3 * sun2019.ts; % (17520 x 1) Power(kW/m2)
n = size(Time, 1);            % number of samples of simulation
Ts = 0.5;                     % Sample time 0.5 h


%% Photovoltaic power plant
%--------------------------
PV_eff=0.10; % (power plant efficiency)
PvPower = SunPower * PV_area * PV_eff;                  % Power of power plant  [kW], (17520 x 1)


%% Battery parameters
%------------------
BattChgEff=0.97;    % [%], charging efficiency
BattDisEff=0.97;    % [%], discharging efficiency
BattFullFact=0.95;
BattEmptyFact=0.05;


%% Hydrogen system parameters
%----------------------------
HHV_H2=39.39;       % [kWh/kg] (hydrogen high heating value) 
Density_H2=0.08988; % [kg/Nm3]
HsysChgEff=0.80;    % [%], charging efficiency (electrolyser efficiency)
HsysDisEff=0.60;    % [%], discharging efficiency (fuel cell efficiency)
HsysFullFact=0.98;
HsysEmptyFact=0.02;


%% Heat pump paramaters
%----------------------
Php_max = 12;                       % [kW] maximum thermal power of heat pump
Php_min = 0.2 * Php_max;            % [kW] minimum thermal power of heat pump (e.g. 20 % of max. power) ###


%% Heat storage controller parameters
%------------------------------------
E_HeatStor_set = 70;                % [kWh] heat storage energy level setpoint

%Nominal parameters
E_HeatStor_dev_min = 4;             % [kWh] minimum deviation
E_HeatStor_dev_max = 20;            % [kWh] maximum deviation

%Test parameters
%E_HeatStor_dev_min = 4;           % [kWh] minimum deviation
%E_HeatStor_dev_max = 4.01;            % [kWh] maximum deviation


%% Initialization of variables
%-----------------------------

%Sun radiation energy per m2 
SunEnergy=zeros(n,1);                      % [kWh/m2]

%Generated energy (PV power-plant)
PvEnergy=zeros(n,1);                       % [kWh]

%Consumed energy (electric consumers)
ConsEnergy=zeros(n,1);                     % [kWh]
GridConsEnergy=zeros(n,1);                 % [kWh]
PvDirectConsPwr=zeros(n,1);                % [kW]
PvDirectConsEnergy=zeros(n,1);             % [kWh]

%Battrey variables
BattSoC=zeros(n,1);                        % [kWh]
BattInpLossEnergy=zeros(n,1);              % [kWh]
BattOutLossEnergy=zeros(n,1);              % [kWh]
BattInpPwr=zeros(n,1);                     % [kW]
BattInpPwrB=zeros(n,1);                    % [kW]
BattOutPwr=zeros(n,1);                     % [kW]
BattOutPwrB=zeros(n,1);                    % [kW]
BattFull=zeros(n,1);                       % 0=No, 1=Yes
BattEmpty=zeros(n,1);                      % 0=No, 1=Yes

%Hydrogen system variables
HsysSoC=zeros(n,1);                        % [kWh]
HsysSoC(1)=3600;                           % [kWh], Starting value of H2 tank
HsysInpLossEnergy=zeros(n,1);              % [kWh]
HsysOutLossEnergy=zeros(n,1);              % [kWh]
HsysInpPwr=zeros(n,1);                     % [kW]
HsysInpPwrB=zeros(n,1);                    % [kW]
HsysOutPwr=zeros(n,1);                     % [kW]
HsysOutPwrB=zeros(n,1);                    % [kW]
HsysFull=zeros(n,1);                       % 0=No, 1=Yes
HsysEmpty=zeros(n,1);                      % 0=No, 1=Yes
eff_EL_specific=zeros(n,1);
eff_FC_specific=zeros(n,1);

H2_MassProduced=zeros(n,1);                % [kg] produced by electrolyser
H2_MassConsumed=zeros(n,1);                % [kg] consumed by fuel cell
H2_MassInTank=zeros(n,1);                  % [kg] 
H2_MassInTank(1) = HsysSoC(1) / HHV_H2;    % [kg]

HsysTankPmax=50;                           % [bar] hydrogen tank max. pressure 
HsysTankVol=HsysCapacity / HHV_H2 / Density_H2 / HsysTankPmax; % tank volume

%Electric grid variables
GridInpPwr=zeros(n,1);                      % [kW] (power going to the grid)
GridOutPwr=zeros(n,1);                      % [kW] (power coming from the grid)
GridInpEnergy=zeros(n,1);                   % [kWh]
GridOutEnergy=zeros(n,1);                   % [kWh]

dEt_hp=zeros(n,1);                          % [kWh] thermal power of heat pump
dEt_fc=zeros(n,1);                          % [kWh] thermal power of heat pump
ConsPower=zeros(n,1);                       % [kWh] Consumed electric power
ExcessPower=zeros(n,1);                     % [kWh] Excess electric power

E_HeatStor_act = zeros(n,1);                % [kWh] heat storage energy actual
E_HeatStor_act(1) = 35;                     % [kWh] heat storage energy level actual value - intital 
E_HeatStor_dev = zeros(n,1);                % [kWh] heat storage energy level deviation from setpoint

P_HeatPump_th_ctrl = zeros(n,1);            % [kW] demanded thermal power, generated by heat pump (controller output)
P_HeatPump_el = zeros(n,1);                 % [kW] associated electric consumtion of heat pump

%Control logic current operation case
OpCase=zeros(n,1);

BattEmptyCounter=0;
BattFullCounter=0;
HsysEmptyCounter=0;
HsysFullCounter=0;
ElectrolyserOperationTime=0;
ElectrolyserOperationTimeEff=0;
FuelCellOperationTime=0;
FuelCellOperationTimeEff=0;


%% Main simulation loop
%----------------------
for i=2:n

    % Heat storage controller (proprtional control with limitations)
    %---------------------------------------------------------------
    %The goal is to keep the amount of heat in the storage app. constant
    %This is achieved by proportional controller influencing the heat pump

    % Control error (deviation)
    E_HeatStor_dev(i) = E_HeatStor_set - E_HeatStor_act(i-1);
    
    % Control case 1 - lower limit
    if (E_HeatStor_dev(i) < E_HeatStor_dev_min)
        P_HeatPump_th_ctrl(i) = 0;

    % Control case 2 - proportional section
    elseif (E_HeatStor_dev(i) >= E_HeatStor_dev_min) && (E_HeatStor_dev(i) <= E_HeatStor_dev_max)
        P_HeatPump_th_ctrl(i) = Php_min + (Php_max - Php_min) * ((E_HeatStor_dev(i) - E_HeatStor_dev_min)...
        / (E_HeatStor_dev_max - E_HeatStor_dev_min));

    % Control case 3 - upper limit
    else 
        P_HeatPump_th_ctrl(i) = Php_max;
    end

    %Relation between heat pump thermal and electric power 
    P_HeatPump_el(i) = P_HeatPump_th_ctrl(i) / CoP;

    % Thermal energy increment generated by the heat pump
    dEt_hp(i) = P_HeatPump_th_ctrl(i) * 0.5;   
       

    % Time-integration of thermal energy in heat storage
    %---------------------------------------------------
    sw=0.6;
    E_HeatStor_act(i) = E_HeatStor_act(i-1) + sw*dEt_fc(i-1) + dEt_hp(i) - dEt_dem(i);  % Actual energy hot water storage
    % dEt_fc - thermal energy increment generated by the fuel cell (thermal losses)
    % dEt_hp - thermal energy increment generated by the heat pump
    % dEt_dem - thermal energy decrement due to heat demand 

    
    % Total consumed electric power
    ConsPower (i) = P_Other (i) + P_HeatPump_el (i);                     % [kW] (17520 x 1)


    %  Excess electric power (kW)
    ExcessPower(i) = PvPower(i) - ConsPower(i);                          % [kW] (17520 x 1)
    
    %Sun energy time profile
    %-----------------------
    %SunPower [kW/m2], SunEnergy (kW/m2)
    SunEnergy(i) = SunEnergy(i-1) +  SunPower(i) * 0.5;
    
    
    %PV generated energy time profile (kWh)
    %--------------------------------------
    PvEnergy(i) = PvEnergy(i-1) + PvPower(i) * 0.5;   
    
    
    %Consumed energy time profile (kWh)
    %----------------------------------
    ConsEnergy(i) = ConsEnergy(i-1) + ConsPower(i) * 0.5;  

    % Grid consumption
    GridConsEnergy(i) = GridConsEnergy(i-1) + E_Total(i);
    
    
    %*************************************%
    %Control algorithm - external function%
    %*************************************%
    [BattInpPwr(i),BattOutPwr(i),HsysInpPwr(i),HsysOutPwr(i),GridInpPwr(i),GridOutPwr(i),OpCase(i),BattFull(i),BattEmpty(i),HsysFull(i),HsysEmpty(i)] = ...
    ControlLogicElectrolyzer(Ts, ExcessPower(i),...
    BattSoC(i-1), BattCapacity, BattFullFact, BattEmptyFact, BattInpPowerMax, BattOutPowerMax,...
    HsysSoC(i-1), HsysCapacity, HsysFullFact, HsysEmptyFact, HsysInpPowerMax, HsysOutPowerMax, HsysInpPowerMin);

        
    %Battery charge/discharge (kW, kWh)
    %----------------------------------
    BattInpPwrB(i) = BattInpPwr(i) * BattChgEff;
    BattOutPwrB(i) = BattOutPwr(i) / BattDisEff;
    BattSoC(i) = BattSoC(i-1) + (BattInpPwrB(i) - BattOutPwrB(i)) * 0.5;
    BattInpLossEnergy(i) = BattInpLossEnergy(i-1) + (BattInpPwr(i) - BattInpPwrB(i)) * 0.5; % [kWh]
    BattOutLossEnergy(i) = BattOutLossEnergy(i-1) + (BattOutPwrB(i) - BattOutPwr(i)) * 0.5; % [kWh]


    %Hydrogen system charge/discharge (kW, kWh)
    %------------------------------------------

    %Electrolyzer
    %------------
    HsysInpPwrB(i) = HsysInpPwr(i) * HsysChgEff; % [kW]  
    HsysInpLossEnergy(i) = HsysInpLossEnergy(i-1) + (HsysInpPwr(i) - HsysInpPwrB(i)) * 0.5; % [kWh]

    % HsysInpPwrB(i) = HsysInpPwr(i) * HsysChgEff; % kW  

    P_EL_NOM = HsysInpPowerMax;
    P_EL_E = P_EL_NOM*[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1];
    Eff_Electrolyser = 100*[0 0.64 0.73 0.75 0.75 0.74 0.72 0.71 0.69 0.68 0.67];
    x_EL = P_EL_E; 
    v_EL = Eff_Electrolyser; %

    % Interpolate 
    eff_EL_specific(i) = interp1(x_EL, v_EL, HsysInpPwr(i), 'spline'); 
    HsysInpPwrB(i) = HsysInpPwr(i) * eff_EL_specific(i)/100; % [kW] 

    HsysInpLossEnergy(i) = HsysInpLossEnergy(i-1) + (HsysInpPwr(i) - HsysInpPwrB(i)) * 0.5; % [kWh]

    %Fuel cell
    %---------
%     HsysOutPwrB(i) = HsysOutPwr(i) / HsysDisEff; % kW
    P_H2_NOM = HsysOutPowerMax;

    P_FC_H2=P_H2_NOM*[0.0 0.01 0.05 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1];
    Eff_FuelCell=[10 20 50 56 58 57.5 57 55 53 50 47 44 40];

    x_FC = P_FC_H2; 
    v_FC = Eff_FuelCell; 

    % Interpolate 
    eff_FC_specific(i) = interp1(x_FC, v_FC, HsysOutPwr(i), 'spline'); 

%     HsysOutPwrB(i) = HsysOutPwr(i) / HsysDisEff; % kW
    HsysOutPwrB(i) =  HsysOutPwr(i) / (eff_FC_specific(i)/100); % [kW] 
    HsysOutLossEnergy(i) = HsysOutLossEnergy(i-1) + (HsysOutPwrB(i) - HsysOutPwr(i)) * 0.5; % [kWh]
    dEt_fc(i) = (HsysOutPwrB(i) - HsysOutPwr(i)) * 0.5; % [kWh]

    %Grid input and ouput energy time profile (kWh)
    %----------------------------------------------
    GridInpEnergy(i) = GridInpEnergy(i-1) + GridInpPwr(i) * 0.5; % to grid
    GridOutEnergy(i) = GridOutEnergy(i-1) + GridOutPwr(i) * 0.5; % from grid

    %Hydrogen tank
    %-------------
    HsysSoC(i) = HsysSoC(i-1) + (HsysInpPwrB(i) - HsysOutPwrB(i)) * 0.5;
    H2_MassInTank(i) = HsysSoC(i) / HHV_H2; % kg
    H2_MassProduced(i) = H2_MassProduced(i-1) + HsysInpPwrB(i) * (1 / HHV_H2) * 0.5; % electrolyser
    H2_MassConsumed(i) = H2_MassConsumed(i-1) + HsysOutPwrB(i) * (1 / HHV_H2) * 0.5; % fuel cell

    %Counting BattEmpty events
    if (BattEmpty(i)==1) && (BattEmpty(i-1)==0)
        BattEmptyCounter = BattEmptyCounter+1;
    end

    %Counting BattFull events
    if (BattFull(i)==1) && (BattFull(i-1)==0)
        BattFullCounter = BattFullCounter+1;
    end

    %Counting HsysEmpty events
    if (HsysEmpty(i)==1) && (HsysEmpty(i-1)==0)
        HsysEmptyCounter = HsysEmptyCounter+1;
    end

    %Counting HsysFull events
    if (HsysFull(i)==1) && (HsysFull(i-1)==0)
        HsysFullCounter = HsysFullCounter+1;
    end

    %Electrolyser operating time
    if (HsysInpPwr(i)>0)
        ElectrolyserOperationTime = ElectrolyserOperationTime + 0.5;
        ElectrolyserOperationTimeEff = ElectrolyserOperationTimeEff + 0.5 * HsysInpPwr(i) / HsysInpPowerMax;
    end
        
    %Fuel cell operating time
    if (HsysOutPwr(i)>0)
        FuelCellOperationTime = FuelCellOperationTime+0.5;
        FuelCellOperationTimeEff = FuelCellOperationTimeEff + 0.5 * HsysOutPwr(i) / HsysOutPowerMax;
    end

    %Pv energy directly consumed by electric consumers
    PvDirectConsPwr(i) = PvPower(i) - BattInpPwr(i) - HsysInpPwr(i) - GridInpPwr(i) + BattOutPwr(i);
    PvDirectConsEnergy(i) = PvDirectConsEnergy(i-1) + PvDirectConsPwr(i) * 0.5;

end%for

Def=0;
for i=2:(180*24*2)
    %if (PvPower(i)-ConsPower(i))<0
    if 1
        Def=Def+(PvPower(i)-ConsPower(i))*0.5;
    end%if
end%for

%% Matrix variables (365 x 48) for daily observations 
%--------------------------------------------------
%di - day index (1...365) - rows
%ti - time index (1...48) - columns
Days=1:365;
Hours=0:0.5:23.5;

SunPowerM=zeros(365,48);   % [kW/m2]
SunEnergyD=zeros(365,1);   % [kWh/m2] Daily sums
SunEnergyTotal_1=0;        % [kWh]

PvPowerM=zeros(365,48);    % [kW]
PvEnergyM=zeros(365,48);   % [kWh]
PvEnergyD=zeros(365,1);    % [kWh] Daily sums
PvEnergyTotal_1=0;         % [kWh]

ConsPowerM=zeros(365,48);  % [kW]
ConsEnergyM=zeros(365,48); % [kWh]
ConsEnergyD=zeros(365,1);  % [kWh] Daily sums
ConsEnergyTotal_1=0;       % [kWh]

ExcessPowerM=zeros(365,48); % [kW]
ExcessEnergyD=zeros(365,1); % [kWh] Daily sums

LackEnergyD=zeros(365,1);  % [kWh] Daily sums
LackEnergyTotal=0;         % [kWh]

BattEnergyM=zeros(365,48); % [kWh]

HsysEnergyM=zeros(365,48); % [kWh]
HsysHmassM=zeros(365,48);  % [kg]

PvEnergyMax_Ammount=0;     % [kWh]
PvEnergyMax_DayIndex=0;    % 1...365
ConsEnergyMax_Ammount=0;   % [kWh]
ConsEnergyMax_DayIndex=0;  % 1...365


%Realocation from vectors to matrices
%------------------------------------
for di=1:365
    for ti=1:48
        
        %DayTime: 0...23.5 h by increment 0.5 h
        DayTime=(ti-1)*0.5;
        
        
        %Sun power (kW/m2) and energy (kWh/m2) in day
        SunPowerM(di,ti) = SunPower((di-1)*48+ti);
        SunEnergyD(di) = SunEnergyD(di) + 1e-3 * SunPowerM(di,ti) * 0.5;        
        
        
        %Generated PV electric power and energy in day (kW)
        PvPowerM(di,ti) = PvPower((di-1)*48+ti);
        if ti>1
            %Generated PV energy daily time profile (kWh)
            PvEnergyM(di,ti) = PvEnergyM(di,ti-1) + PvPowerM(di,ti) * 0.5;
        end
            %Generated PV energy daily sum (kWh)
            PvEnergyD(di) = PvEnergyD(di) + PvPowerM(di,ti) * 0.5;
        
        
        
        %Consumed electric power and energy in day (kW)
        ConsPowerM(di,ti) = ConsPower((di-1)*48+ti);
        if ti>1
            %Consumed energy daily time profile (kWh)
            ConsEnergyM(di,ti) = ConsEnergyM(di,ti-1) + ConsPowerM(di,ti) * 0.5;
        end
            %Consumed energy daily sum (kWh)
            ConsEnergyD(di) = ConsEnergyD(di) + ConsPowerM(di,ti) * 0.5;
        
        
                       
        %Excess electric power (kW)
        ExcessPowerM(di,ti) = ExcessPower((di-1)*48+ti);
        
        
        %Integration of 'negative excess' power in day
        if ExcessPowerM(di,ti)<0
            LackEnergyD(di) = LackEnergyD(di) + ExcessPowerM(di,ti) * 0.5;
        end
        
        
        %Battery energy (kWh)
        BattEnergyM(di,ti) = BattSoC((di-1)*48+ti);
        
        
        %Hydrogen system energy (kWh) and hydrogen mass (kg)
        HsysEnergyM(di,ti) = HsysSoC((di-1)*48+ti);
        HsysHmassM(di,ti) = H2_MassInTank((di-1)*48+ti);
        
                
    end%for
    
    %Excess energy in days (kWh)
    ExcessEnergyD(di) = PvEnergyD(di) - ConsEnergyD(di);
    
    
    %Sum of negative excess energy of days in whole year (kWh)
    %for energy storage size estimation
    if ExcessEnergyD(di) < 0 
        LackEnergyTotal = LackEnergyTotal + ExcessEnergyD(di);
    end%if
        

    %Total sun and PV energy in year (kWh)
    SunEnergyTotal_1 = SunEnergyTotal_1 + SunEnergyD(di);
    PvEnergyTotal_1 = PvEnergyTotal_1 + PvEnergyD(di);      
    ConsEnergyTotal_1 = ConsEnergyTotal_1 + ConsEnergyD(di);      
    
    %Maximum daily generated and consumed energy and day index
    if PvEnergyD(di)>PvEnergyMax_Ammount
        PvEnergyMax_Ammount=PvEnergyD(di);
        PvEnergyMax_DayIndex=di;
    end
    if ConsEnergyD(di)>ConsEnergyMax_Ammount
        ConsEnergyMax_Ammount=ConsEnergyD(di);
        ConsEnergyMax_DayIndex=di;
    end
       
end%for

%Generated electric energy in months (kWh)
%-----------------------------------------
PvEnergyInMonth=zeros(1,12);
PvEnergyInMonth(1,1)=sum(PvEnergyD(1:31));         % Pv energy in month 1
PvEnergyInMonth(1,2)=sum(PvEnergyD(32:59));        % Pv energy in month 2
PvEnergyInMonth(1,3)=sum(PvEnergyD(60:90));        % Pv energy in month 3
PvEnergyInMonth(1,4)=sum(PvEnergyD(91:120));       % Pv energy in month 4
PvEnergyInMonth(1,5)=sum(PvEnergyD(121:151));      % Pv energy in month 5
PvEnergyInMonth(1,6)=sum(PvEnergyD(152:181));      % Pv energy in month 6
PvEnergyInMonth(1,7)=sum(PvEnergyD(182:212));      % Pv energy in month 7
PvEnergyInMonth(1,8)=sum(PvEnergyD(213:243));      % Pv energy in month 8
PvEnergyInMonth(1,9)=sum(PvEnergyD(244:273));      % Pv energy in month 9
PvEnergyInMonth(1,10)=sum(PvEnergyD(274:304));     % Pv energy in month 10
PvEnergyInMonth(1,11)=sum(PvEnergyD(305:334));     % Pv energy in month 11
PvEnergyInMonth(1,12)=sum(PvEnergyD(335:365));     % Pv energy in month 12

%Consumed electric energy in months (kWh)
%----------------------------------------
ConsEnergyInMonth=zeros(1,12);
ConsEnergyInMonth(1,1)=sum(ConsEnergyD(1:31));     % Consumed energy in month 1
ConsEnergyInMonth(1,2)=sum(ConsEnergyD(32:59));    % Consumed energy in month 2
ConsEnergyInMonth(1,3)=sum(ConsEnergyD(60:90));    % Consumed energy in month 3
ConsEnergyInMonth(1,4)=sum(ConsEnergyD(91:120));   % Consumed energy in month 4
ConsEnergyInMonth(1,5)=sum(ConsEnergyD(121:151));  % Consumed energy in month 5
ConsEnergyInMonth(1,6)=sum(ConsEnergyD(152:181));  % Consumed energy in month 6
ConsEnergyInMonth(1,7)=sum(ConsEnergyD(182:212));  % Consumed energy in month 7
ConsEnergyInMonth(1,8)=sum(ConsEnergyD(213:243));  % Consumed energy in month 8
ConsEnergyInMonth(1,9)=sum(ConsEnergyD(244:273));  % Consumed energy in month 9
ConsEnergyInMonth(1,10)=sum(ConsEnergyD(274:304)); % Consumed energy in month 10
ConsEnergyInMonth(1,11)=sum(ConsEnergyD(305:334)); % Consumed energy in month 11
ConsEnergyInMonth(1,12)=sum(ConsEnergyD(335:365)); % Consumed eEnergy in month 12

%% Energy balance (must be zero)
%-------------------------------
Balance=...
+PvEnergy(end)...
-ConsEnergy(end)...
+GridOutEnergy(end)...
-GridInpEnergy(end)...
-BattInpLossEnergy(end)...
-BattOutLossEnergy(end)...
+BattSoC(1)...
-BattSoC(end)...
-HsysInpLossEnergy(end)...
-HsysOutLossEnergy(end)...
+HsysSoC(1)...
-HsysSoC(end);

%% Hydrogen mass balance (must be zero)
%--------------------------------------
BalanceH2=...
+H2_MassProduced(end)...
-H2_MassConsumed(end)...
+H2_MassInTank(1)...
-H2_MassInTank(end);


%% Add up of energy deficit of days when consumed energy exceeds generated energy
%--------------------------------------------------------------------------------
Deficit=0;
for i=1:180
    if (PvEnergyD(i)-ConsEnergyD(i))<0
        Deficit=Deficit+(PvEnergyD(i)-ConsEnergyD(i));
    end%if
end%for


%% Economic parameters
%---------------------
CAPEX_r_SolarPwrPlant = 210;  %EUR/m2
CAPEX_r_Electrolyser = 800;   %EUR/kW
CAPEX_r_FuelCell = 800;       %EUR/kW
CAPEX_r_HydrogenTank = 250;   %EUR/kg
CAPEX_r_Battery = 400;        %EUR/kWh

CAPEX_SolarPwrPlant = CAPEX_r_SolarPwrPlant * PV_area;       %EUR
CAPEX_Electrolyser = CAPEX_r_Electrolyser * HsysInpPowerMax; %EUR
CAPEX_FuelCell = CAPEX_r_FuelCell * HsysOutPowerMax;         %EUR
%CAPEX_HydrogenTank = CAPEX_r_HydrogenTank * (HsysCapacity / HHV_H2); %EUR
CAPEX_HydrogenTank = CAPEX_r_HydrogenTank * ((max(HsysSoC)-min(HsysSoC)) / HHV_H2); %EUR
CAPEX_Battery = CAPEX_r_Battery*BattCapacity;                %EUR

CAPEX_Total = ...
+ CAPEX_SolarPwrPlant...
+ CAPEX_Electrolyser...
+ CAPEX_FuelCell...
+ CAPEX_HydrogenTank...
+ CAPEX_Battery;

LifeTime=20; %years

ElPrice_SolarPwrPlant=CAPEX_SolarPwrPlant/(LifeTime*ConsEnergyTotal_1*1e-3);
ElPrice_Electrolyser=CAPEX_Electrolyser/(LifeTime*ConsEnergyTotal_1*1e-3);
ElPrice_FuelCell=CAPEX_FuelCell/(LifeTime*ConsEnergyTotal_1*1e-3);
ElPrice_HydrogenTank=CAPEX_HydrogenTank/(LifeTime*ConsEnergyTotal_1*1e-3);
ElPrice_Battery=CAPEX_Battery/(LifeTime*ConsEnergyTotal_1*1e-3);

ElPrice_Total = ...
+ ElPrice_SolarPwrPlant...
+ ElPrice_Electrolyser...
+ ElPrice_FuelCell...
+ ElPrice_HydrogenTank...
+ ElPrice_Battery;


YearPrice = CAPEX_Total / LifeTime; %years

%% Total thermal energy
Et_total = dEt_fc + dEt_hp;

% Avoiding dividing with 0
Et_total(Et_total == 0) = NaN;

% Individual sources
%share_fc = nansum(Et_fc) / nansum(Et_total) * 100;  % [%] nan - sum elements while ignoring NaN values (Not-a-Number)
%share_hp = nansum(Et_hp) / nansum(Et_total) * 100;  % [%]
share_fc = 0;
share_hp = 0;

% Time vector for 2022, sample 30 minut
t = datetime(2022,1,1,0,0,0) + minutes(30)*(0:17519);

% Months
months = 1:12;
share_fc = zeros(1,12);
share_hp = zeros(1,12);

for m = months
    % Indexes of the current month
    idx = month(t) == m;
    
    % Total thermal energy per month
    Et_total_m = dEt_fc(idx) + dEt_hp(idx);
    
    % To avoid division by 0
    if sum(Et_total_m) == 0
        share_fc(m) = 0;
        share_hp(m) = 0;
    else
        share_fc(m) = sum(dEt_fc(idx)) / sum(Et_total_m) * 100;
        share_hp(m) = sum(dEt_hp(idx)) / sum(Et_total_m) * 100;
    end
end



%% Calculation of coverage
Et_fc_day = reshape(dEt_fc(1:floor(end/48)*48), 48, []);       % [48 × days]
Et_dem_day = reshape(dEt_dem(1:floor(end/48)*48), 48, []);     

% Daily totals
Et_fc_daily_sum = sum(Et_fc_day, 1);   % [1 × days]
Et_dem_daily_sum = sum(Et_dem_day, 1); % [1 × days]

% Prevent division by 0
Et_dem_daily_sum_safe = Et_dem_daily_sum;
Et_dem_daily_sum_safe(Et_dem_daily_sum_safe == 0) = NaN;

% Coverage in %
daily_coverage_fc = (Et_fc_daily_sum ./ Et_dem_daily_sum_safe) * 100;
daily_coverage_fc(isnan(daily_coverage_fc)) = 0;
daily_coverage_fc(daily_coverage_fc > 100) = 100;


% Annual energy consumption in kWh
annual_consumption_kWh = GridConsEnergy(end);  

% Local energy consumption in kWh
local_consumption_kWh = ConsEnergy(end); 

%%  Price parameters - EUROSTAT
% Germany, 2024, Consumption from 5000kWh to 14999kWh

% Electricity supply price (€/kWh excluding VAT)
price_supply = 0.1640;  

% Network charge for consumed energy (€/kWh excluding VAT)
price_network_kWh = 0.0909;

% Taxes, fees, levies and charges
price_taxes_fees_levies_charges = 0.1064;

% Total
price_total = 0.3613;

% === Calculation  ===

% Cost
cost_total = annual_consumption_kWh * price_total;

% Final price per kWh (including all charges and VAT)
final_price_per_kWh = cost_total / annual_consumption_kWh;

% Final Local price per kWh 
final_Local_price_per_kWh = YearPrice / local_consumption_kWh;

%% PLOT:
% Comparison of PV data  
%----------------------
figure (1);
%set(gcf,'position',[x0,y0,width,height])
set(gcf,'position',[100,100,800,400])
tps=1;% t plot start (days)
tpe=365;% t plot end   (days)
nps=tps*48;
npe=tpe*48;

plot(Time/24, PvPower, 'k');
xlabel('Time [day]');
ylabel('Pv power [kW]');
xlim([tps tpe]);
%ylim([0 2]);
title(['Pv power']);

%%  Comparison of generated and consumed power
%--------------------------------------------------
figure (2);
set(gcf,'position',[100,100,800,400])

subplot(2,1,1);
plot(Time/24, PvPower, 'k');
%xlabel('Time [day]');
ylabel('Pv power [kW]');
xlim([tps tpe]);
ylim([0 20]);

% subplot(2,1,2);
% plot(Time/24, ConsPower, 'k');
% xlabel('Time [day]');
% ylabel('Cons power [kW]');
% xlim([tps tpe]);
% ylim([0 20]);

%%
figure (3);
tps=150;% t plot start (days)
tpe=180;% t plot end   (days)
nps=tps*48;
npe=tpe*48;
ymin1=min(HsysSoC(nps:npe))-2;
ymax1=max(HsysSoC(nps:npe))+2;
ymin2=min(BattSoC(nps:npe))-2;
ymax2=max(BattSoC(nps:npe))+2;
ymin3=min(H2_MassInTank(nps:npe))-100;
ymax3=max(H2_MassInTank(nps:npe))+100;

subplot(3,2,1);
plot(Time/24, HsysSoC, 'k');
xlabel('Time [day]');
ylabel('Energy [kWh]');
xlim([tps tpe]);
%ylim([ymin1 ymax1]);
title(['H2 system energy over year']);

subplot(3,2,2);
plot(Time/24, BattSoC, 'k');
xlabel('Time [day]');
ylabel('Energy [kWh]');
xlim([tps tpe]);
ylim([ymin2 ymax2]);
title(['Battery energy over year']);

subplot(3,2,3);
plot(Time/24, H2_MassInTank, 'k');
xlabel('Time [day]');
ylabel('H2 mass [kg]');
xlim([tps tpe]);
ylim([ymin2 ymax2]);
title(['H2 mass over year']);

subplot(3,2,5);
plot(Time/24, ExcessPower, 'k', Time/24, HsysInpPwrB, 'g', Time/24, -HsysOutPwrB, 'r');
xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-10 10]);
title(['H2 system power over year']);
legend('Excess power', 'H2 inp. power', 'H2 out. power');

subplot(3,2,6);
plot(Time/24, ExcessPower, 'k', Time/24, BattInpPwrB, 'g', Time/24, -BattOutPwrB, 'r', Time/24, GridInpPwr, 'b', Time/24, -GridOutPwr, 'c');
xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-10 10]);
title(['Battery power over year']);
legend('Excess power', 'Batt inp. power', 'Batt out. power', 'Grid inp. power', 'Grid out. power');

%% PLOT Energy and power
%-----------------------
figure (4);
set(gcf,'position',[100,100,800,1100]);
tps=1;% t plot start (days)
tpe=365;% t plot end   (days)
%tps=180;% t plot start (days)
%tpe=182;% t plot end   (days)
nps=tps*48;
npe=tpe*48;
ymin1=min(HsysSoC(nps:npe))-2;
ymax1=max(HsysSoC(nps:npe))+2;
ymin2=min(BattSoC(nps:npe))-2;
ymax2=max(BattSoC(nps:npe))+2;
ymin3=min(H2_MassInTank(nps:npe))-100;
ymax3=max(H2_MassInTank(nps:npe))+100;

subplot(4,2,1);
plot(Time/24, HsysSoC, 'k');
%xlabel('Time [day]');
ylabel('Energy [kWh]');
xlim([tps tpe]);
%ylim([ymin1 ymax1]);
ylim([-5 HsysCapacity+5]);
title(['H2 system energy']);

subplot(4,2,2);
plot(Time/24, BattSoC, 'k');
%xlabel('Time [day]');
ylabel('Energy [kWh]');
xlim([tps tpe]);
ylim([ymin2 ymax2]);
title(['Battery energy']);

subplot(4,2,3);
plot(Time/24, HsysInpPwrB, 'g', Time/24, -HsysOutPwrB, 'r');
%xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-20 20]);
title(['H2 system power']);
legend('H2 inp. power', 'H2 out. power');

subplot(4,2,4);
plot(Time/24, BattInpPwrB, 'g', Time/24, -BattOutPwrB);
%xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-20 20]);
title(['Battery power']);
legend('Batt inp. power', 'Batt out. power');

subplot(4,2,5);
plot(Time/24, ExcessPower, 'k', [tps tpe], [0 0], 'k--');
%xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-20 20]);
title(['Excess power']);

subplot(4,2,6);
plot(Time/24, GridInpPwr, 'g', Time/24, -GridOutPwr, 'r');
%xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-20 20]);
title(['Grid power']);
legend('Grid inp. power', 'Grid out. power');

subplot(4,2,7);
plot(Time/24, PvPower, 'g');
%xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([0 20]);
title(['Pv generated power']);

subplot(4,2,8);
plot(Time/24, ConsPower, 'r');
%xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([0 20]);
title(['Consumed power']);

%% PLOT: Battery energy
%----------------------
figure (5);
%set(gcf,'position',[x0,y0,width,height])
set(gcf,'position',[100,100,800,800]);
tps=1;% t plot start (days)
tpe=365;% t plot end   (days)
%tps=150;% t plot start (days)
%tpe=350;% t plot end   (days)
nps=tps*48;
npe=tpe*48;
ymin=min(BattSoC(nps:npe))-2;
ymax=max(BattSoC(nps:npe))+2;

subplot(2,1,1);
plot(Time/24, BattSoC, 'k', Time/24, 0.2*BattFull+ymin+1, 'g', Time/24, 0.2*BattEmpty+ymin+0.5, 'r');
%xlabel('Time [day]');
ylabel('Energy [kWh]');
xlim([tps tpe]);
ylim([ymin ymax]);
title(['Battery energy']);
legend('Batt state-of-charge', 'Batt full', 'Batt empty');

subplot(2,1,2);
plot(Time/24, ExcessPower, 'k', Time/24, BattInpPwrB, 'g', Time/24, -BattOutPwrB, 'r', Time/24, GridInpPwr, 'b', Time/24, -GridOutPwr, 'c');
xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-10 15]);
title(['Battery power']);
legend('Excess power', 'Batt inp. power', 'Batt out. power', 'Grid inp. power', 'Grid out. power');

%% PLOT: Hydrogen system energy and power
%----------------------------------------
figure (6);
%set(gcf,'position',[x0,y0,width,height])
set(gcf,'position',[100,100,800,800]);
%tps=341-10;% t plot start (days)
%tpe=343+10;% t plot end   (days)
tps=1;% t plot start (days)
tpe=365;% t plot end   (days)
nps=tps*48;
npe=tpe*48;

subplot(2,1,1);
%plot(Time/24, HsysSoC, 'k', Time/24, 0*0.2*HsysFull+ymin+1, 'g', Time/24, 0*0.2*HsysEmpty+ymin+0.5, 'r');
plot(Time/24, HsysSoC, 'k');
%xlabel('Time [day]');
ylabel('Energy [kWh]');
%ymin=min(HsysSoC(nps:npe))-2;
ymax=max(HsysSoC(nps:npe))+2;
ymin=0;
%ymax=5000;
xlim([tps tpe]);
ylim([ymin ymax]);
title(['Hydrogen system energy']);
%legend('Hydrogen system state-of-charge', 'Hsys full', 'Hsys empty');

% subplot(3,1,2);
% plot(Time/24, H2_MassInTank, 'k');
% %xlabel('Time [day]');
% ylabel('H2 mass [kg]');
% %ymin=min(H2_MassInTank(nps:npe))-100;
% ymax=max(H2_MassInTank(nps:npe))+100;
% ymin=0;
% %ymax=5000/HHV_H2;
% xlim([tps tpe]);
% ylim([ymin ymax]);
% title(['H2 mass']);

subplot(2,1,2);
plot(Time/24, ExcessPower, 'k', Time/24, HsysInpPwrB, 'g', Time/24, -HsysOutPwrB, 'r', Time/24, GridInpPwr, 'b', Time/24, -GridOutPwr, 'c');
xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-15 15]);
title(['Hydrogen system power']);
legend('Excess power', 'Hsys inp. power', 'Hsys out. power', 'Grid inp. power', 'Grid out. power');

%% PLOT: Power time profiles
%---------------------------
figure (7);
%set(gcf,'position',[x0,y0,width,height])
set(gcf,'position',[100,100,800,1100]);
%tps=341-10;% t plot start (days)
%tpe=343+10;% t plot end   (days)
tps=1;% t plot start (days)
tpe=365;% t plot end   (days)
nps=tps*48;
npe=tpe*48;

subplot(4,1,1);
plot(Time/24, ExcessPower, 'k');
%plot(Time/24, PvPower, 'k', Time/24, ConsPower, 'b');
%xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-15 15]);
title('Excess power (PV generated - Consumed)');
legend('Excess power');

subplot(4,1,2);
plot(Time/24, BattInpPwrB, 'g', Time/24, -BattOutPwrB, 'r');
%xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-15 15]);
title('Battery power');
legend('Batt inp. power', 'Batt out. power');

subplot(4,1,3);
plot(Time/24, HsysInpPwrB, 'g', Time/24, -HsysOutPwrB, 'r');
%xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-15 15]);
title('Hydrogen system power');
legend('Hsys inp. power', 'Hsys out. power');

subplot(4,1,4);
plot(Time/24, GridInpPwr, 'b', Time/24, -GridOutPwr, 'c');
xlabel('Time [day]');
ylabel('Power [kW]');
xlim([tps tpe]);
ylim([-15 15]);
title('Grid power');
legend('Grid inp. power', 'Grid out. power');

%% PLOT: Combined
%----------------
figure (8);
%set(gcf,'position',[x0,y0,width,height])
set(gcf,'position',[100,100,800,1100]);
%tps=341-10;% t plot start (days)
%tpe=343+10;% t plot end   (days)
tps=1;% t plot start (days)
tpe=365;% t plot end   (days)
nps=tps*48;
npe=tpe*48;

subplot(7,1,1);
plot(Time/24, ExcessPower, 'k');
%plot(Time/24, PvPower, 'k', Time/24, ConsPower, 'b');
%xlabel('Time [day]');
ylabel('Excess power [kW]');
xlim([tps tpe]);
ylim([-20 20]);
%title('Excess power (PV generated - Consumed)');
%legend('Excess power');

subplot(7,1,2);
%plot(Time/24, HsysSoC, 'k', Time/24, 0*0.2*HsysFull+ymin+1, 'g', Time/24, 0*0.2*HsysEmpty+ymin+0.5, 'r');
plot(Time/24, HsysSoC, 'k');
hold on;
plot(Time/24, HsysCapacity*ones(17520,1), 'k--');
%xlabel('Time [day]');
ylabel('Hydrogen energy [kWh]');
%ymin=min(HsysSoC(nps:npe))-2;
ymax=max(HsysSoC(nps:npe))+2;
ymin=0;
ymax=15000;
xlim([tps tpe]);
ylim([ymin ymax]);
%title(['Hydrogen system energy']);

subplot(7,1,3);
plot(Time/24, HsysInpPwr, 'g', Time/24, -HsysOutPwr, 'r');
hold on;
plot(Time/24, HsysInpPowerMax*ones(17520,1), 'k--', Time/24, -HsysOutPowerMax*ones(17520,1), 'k--');
%xlabel('Time [day]');
ylabel('Hydrogen sys. power [kW]');
xlim([tps tpe]);
ylim([-20 20]);
%title('Hydrogen system power');
legend('Hsys inp. power', 'Hsys out. power');

subplot(7,1,4)
plot(Time/24, BattSoC, 'k');
hold on;
plot(Time/24, BattFullFact*BattCapacity*ones(17520,1), 'k--');
%xlabel('Time [day]');
ylabel('Battery energy [kWh]');
xlim([tps tpe]);
ylim([0 20]);
%title(['Battery energy']);
legend('Batt state-of-charge');

subplot(7,1,5);
plot(Time/24, BattInpPwr, 'g', Time/24, -BattOutPwr, 'r');
hold on;
plot(Time/24, BattInpPowerMax*ones(17520,1), 'k--', Time/24, -BattOutPowerMax*ones(17520,1), 'k--');
%xlabel('Time [day]');
ylabel('Battery power [kW]');
xlim([tps tpe]);
ylim([-15 15]);
%title('Battery power');
legend('Batt inp. power', 'Batt out. power');

subplot(7,1,6);
plot(Time/24, GridInpPwr, 'b', Time/24, -GridOutPwr, 'c');
xlabel('Time [day]');
ylabel('Grid power [kW]');
xlim([tps tpe]);
ylim([-15 15]);
%title('Grid power');
legend('Grid inp. power', 'Grid out. power');

subplot(7,1,7)
plot(Time/24, BattFull+7, 'b', Time/24, BattEmpty+5, 'r', Time/24, HsysFull+3, 'g', Time/24, HsysEmpty+1, 'c');
%xlabel('Time [day]');
ylabel('Batand H3 storage status');
xlim([tps tpe]);
ylim([0 9]);
legend('Batt full', 'Batt empty', 'Hsys full', 'Hsys empty');

%% PLOT: Sun power and sun energy over time in hours
%---------------------------------------------------
% figure (9);
% subplot(2,1,1);
% plot(Time,SunPower);
% %xlabel('Time [h]');
% ylabel('Sun power [kW/m2]');
% xlim([0 365*24]);
% ylim([0 2]);
% title('Sun power through year');
% 
% subplot(2,1,2);
% plot(Time,SunEnergy);
% xlabel('Time [h]');
% ylabel('Sun energy [kWh/m2]');
% xlim([0 365*24]);
% ylim([0 2]);
% title('Sun energy totalization in year');


%% PLOT: Generated and consumed electric energy in months
%--------------------------------------------------------
figure (10);
subplot(4,1,1);
bar([1:12], PvEnergyInMonth, 1, 'y');
ylabel('kWh');
xlim([0 13]);
ylim([0 4000]);
title('Total PV electric energy in months');

subplot(4,1,2);
bar([1:12], ConsEnergyInMonth,1, 'r');
ylabel('kWh');
xlim([0 13]);
ylim([0 4000]);
title('Total consumed electric energy in months');

subplot(4,1,3);
b=bar([1:12], [PvEnergyInMonth; ConsEnergyInMonth], 1, 'FaceColor','flat');
ylabel('kWh');
b(1).CData = [1 1 0];
b(2).CData = [1 0 0];
xlim([0 13]);
ylim([0 4000]);
legend('PV el. energy', 'Consumed el. energy');
title('Total PV and consumed el. energy in months');

subplot(4,1,4);
b=bar([1:12], [PvEnergyInMonth-ConsEnergyInMonth], 1, 'FaceColor','flat');
ylabel('kWh');
xlim([0 13]);
ylim([-4000 4000]);
title('PV minus consumed el. energy in months');


%% PLOT: Sun energy in days
%--------------------------
% figure (11);
% bar(Days, SunEnergyM);
% xlabel('Days 1...365');
% ylabel('Sun energy [kWh/m2]');
% xlim([0 365]);
% ylim([0 15]);
% title('Total sun energy of each day in year');


%% PLOT: Generated and consumed electric energy in days
%------------------------------------------------------
figure (12);
subplot(3,1,1);
bar(Days, PvEnergyD);
%xlabel('Days 1...365');
ylabel('PV electric energy [kWh]');
xlim([0 365]);
ylim([0 250]);
title('Total PV electric energy of each day in year');

subplot(3,1,2);
bar(Days, ConsEnergyD);
%xlabel('Days 1...365');
ylabel('Consumed electric energy [kWh]');
xlim([0 365]);
ylim([0 250]);
title('Total consumed electric energy of each day in year');

subplot(3,1,3);
bar(Days, PvEnergyD-ConsEnergyD);
xlabel('Days 1...365');
ylabel('Excess electric energy [kWh]');
xlim([0 365]);
ylim([-125 125]);
title('Total excess electric energy of each day in year');


%% PLOT: Sun power as a function of hour-in-day
%----------------------------------------------
% DayNumber=155;
% figure (13);
% plot(Hours, SunPowerM(DayNumber,:), 'k-o');
% xlabel('Hour 0...23,5');
% ylabel('Sun power [kW/m2]');
% xlim([0 24]);
% ylim([0 2]);
% title(['Sun power distribution over day, day number: ', num2str(DayNumber)]);


%% PLOT: Generated and consumed electric energy as a function of hour-in-day
%---------------------------------------------------------------------------
figure (14);
%181 330
DayNumber=331;

subplot (2,1,1);
plot(Hours, PvPowerM(DayNumber,:), 'k-o', Hours, ConsPowerM(DayNumber,:), 'k-x');
%xlabel('Hour 0...23,5');
ylabel('Power [kW]');
xlim([0 24]);
ylim([0 15]);
legend('PV power','Cons. power','Location','NorthWest');
title(['PV generated power and consumed power over day no.: ', num2str(DayNumber)]);

subplot (2,1,2);
plot(Hours, PvEnergyM(DayNumber,:)-ConsEnergyM(DayNumber,:), 'k-s', [0 24], [0  0], 'k--');
%plot(Hours, PvEnergyM(DayNumber,:), 'k-o', Hours, ConsEnergyM(DayNumber,:), 'k-x');
xlabel('Hour 0...23,5');
ylabel('Energy [kWh]');
xlim([0 24]);
ylim([-10 200]);
title(['Energy balance of day no.: ', num2str(DayNumber)]);
text(0.5,180,['Generated energy: ',num2str(PvEnergyD(DayNumber)),' kWh']);
text(0.5,155,['Consumed energy: ',num2str(ConsEnergyD(DayNumber)),' kWh']);
text(0.5,130,['Excess energy: ',num2str(ExcessEnergyD(DayNumber)),' kWh']);
%text(1,6,['Lack energy:      ',num2str(LackEnergyD(DayNumber)),' kWh']);


%% 3D PLOT: Sun power as a function of hour-in-day and day-in-year
%---------------------------------------------------------------
%figure (15);
%surf(Days, Hours, PowerM.','edgecolor','none'); % surface plot
%view(30,40);
%grid on;



%% 3D PLOT: Sun power as a function of hour-in-day and day-in-year
%-----------------------------------------------------------------
dMat = (repmat(Days', 1, 48))';
hMat = (repmat(Hours', 1, 365));
figure (16);
plot3(dMat, hMat, SunPowerM');
xlabel('Day 1...365');
ylabel('Hour 0...23,5');
zlabel('Sun power [kW/m2]');
xlim([1 365]);
ylim([0 24]);
zlim([0 2]);
title('Sun power as a function of hour and day');


%% 3D PLOT: Pv power as a function of hour-in-day and day-in-year
%--------------------------------------------------------------
dMat = (repmat(Days', 1, 48))';
hMat = (repmat(Hours', 1, 365));
figure (17);
mesh(dMat, hMat, PvPowerM');
xlabel('Day 1...365');
ylabel('Hour 0...23,5');
zlabel('Pv power [kW]');
xlim([1 365]);
ylim([0 24]);
zlim([0 15]);
title('PV power as a function of hour and day');


%% PLOT: PV power WINTER and SUMMER
%----------------------------------
figure (18);
plot(PvPowerM(12, 1:2:48));
hold on
plot(PvPowerM(186, 1:2:48));
xlabel('time [h]');
ylabel('Consumption power [kW]');
zlabel('Pv power [kW]');
xlim([1 24]);
ylim([0 15]);
title('PV power - WINTER and SUMMER');
legend('WINTER','SUMMER')


%% 3D PLOT: Consumed power as a function of hour-in-day and day-in-year
%----------------------------------------------------------------------
dMat = (repmat(Days', 1, 48))';
hMat = (repmat(Hours', 1, 365));
figure (19);
mesh(dMat, hMat, ConsPowerM');
caxis([0, 8]);
xlabel('Day 1...365');
ylabel('Hour 0...23,5');
zlabel('Consumed power [kW]');
xlim([1 365]);
ylim([0 24]);
zlim([0 10]);
%title('Consumer power as a function of hour and day');


%% PLOT: Consumed power WINTER
%-----------------------------
figure (20);
plot(ConsPowerM(12, 1:2:48));
hold on
plot(ConsPowerM(15, 1:2:48));
hold on
plot(ConsPowerM(16, 1:2:48));
xlabel('time [h]');
ylabel('Consumption power [kW]');
zlabel('Pv power [kW]');
xlim([1 24]);
ylim([0 6]);
title('Consumer power - WINTER');
legend('Working day','Saturday','Sunday')


%% PLOT: Consumed power SUMMER
%-----------------------------
figure (21);
plot(ConsPowerM(191, 1:2:48));
hold on
plot(ConsPowerM(194, 1:2:48));
hold on
plot(ConsPowerM(195, 1:2:48));
xlabel('time [h]');
ylabel('Consumption power [kW]');
zlabel('Pv power [kW]');
xlim([1 24]);
ylim([0 5]);
title('Consumer power - SUMMER');
legend('Working day','Saturday','Sunday')


%% PLOT: Battery energy
%----------------------
figure (22);
subplot(2,1,1);
HourNumber=48; %1...48
plot(Days, (BattEnergyM(:,HourNumber))', 'k-o');
xlabel('0.5 h');
ylabel('Batt energy [kWh]');
xlim([1 365]);
%ylim([-200 1000]);
title(['Batt. energy over year, time: ', num2str(HourNumber)]);

subplot(2,1,2);
DayNumber=150; %1...365
plot(Hours, BattEnergyM(DayNumber:DayNumber+1,:), 'k-o');
xlabel('Hour 0...23,5');
ylabel('Batt energy [kWh]');
xlim([0 24]);
ymin=min(BattEnergyM(DayNumber,:))-1;
ymax=max(BattEnergyM(DayNumber+1,:))+1;
ylim([ymin ymax]);
title(['Batt. energy over day, day number: ', num2str(DayNumber)]);


%% PLOT: Hot water storage
%----------------------
figure(23);
plot(Time/24, E_HeatStor_act, 'b', 'LineWidth', 1.5); hold on;

xlabel('Time [day]');
ylabel('Energy in the storage tank [kWh]');
title('Tank capacity over time');
legend('Fullness', 'Max capacity', 'Min capacity');
grid on;
xlim([1 365]);

% Display as stacked bar graph
figure(24);
bar(months, [share_fc; share_hp]', 'stacked');
xlabel('Month');
ylabel('Thermal energy [%]');
title('Monthly share of thermal energy: Fuel Cell vs. Heat Pump');
legend('Fuel Cell', 'Heat Pump', 'Location', 'southoutside', 'Orientation', 'horizontal');
grid on;

% figure(25);
% plot(ZalogovnikFull);
% hold on;
% plot(ZalogovnikEmpty);
% legend('Zalogovnik FULL', 'Zalogovnik EMPTY');
% title('Logični pogoji ZALOGOVNIK čez čas');
% xlabel('Čas');
% ylabel('Logično stanje (0 ali 1)');
% grid on;

figure(26);
plot(Days, daily_coverage_fc, 'b');
xlabel('Days');
ylabel('Daily coverage FC [%]');
title('Daily coverage with thermal energy of Fuel Cell');
grid on;
ylim([0 100]);
xlim([1 365]);

figure(27);
plot(Time/24, P_HeatPump_el);
xlabel('Time [day]');
ylabel('Power [kW]');
title('Power of heat pump');
grid on;
xlim([1 365]);


%d_start=80;
%d_end=89;

d_start=350;
d_end=359;

figure(28);
subplot(2,1,1);
plot(Time/24, P_HeatPump_th_ctrl);
xlim([d_start d_end]);
ylim([0 15]);
xlabel('Time [day]');
ylabel('Heat pump thermal power [kW]');
grid on;

% subplot(3,1,2);
% plot(Time/24, E_HeatStor_act);
% xlim([d_start d_end]);
% ylim([0 75]);
% xlabel('Time [day]');
% ylabel('Thermal energy in the storage [kWh]');
% grid on;

subplot(2,1,2);
plot(Time/24, E_HeatStor_dev);
xlim([d_start d_end]);
ylim([-30 30]);
xlabel('Time [day]');
ylabel('Thermal energy deviation [kWh]');
grid on;


%% REPORT display
%-----------------------------------------------------------------------------------------
%disp(['Sun energy in one year (kWh/m2):              ', num2str(SunEnergy(end))]);
%disp(['Sun energy in one year (kWh/m2), control:     ', num2str(SunEnergyTotal_1)]);
disp(['PV generated energy in year (kWh):             ', num2str(PvEnergyTotal_1)]);
disp(['Consumed energy in year (kWh):                 ', num2str(ConsEnergyTotal_1)]);
disp(['Excess energy in year (kWh):                   ', num2str(PvEnergyTotal_1-ConsEnergyTotal_1)]);
disp(['Pv energy directly consumed (kWh):             ', num2str(PvDirectConsEnergy(end))]);
disp(' ');
disp('ENERGY BALANCE');
disp(['PV generated energy (kWh):           [+]       ', num2str(PvEnergy(end))]);
disp(['Consumed energy (kWh):               [-]       ', num2str(ConsEnergy(end))]);
disp(['Grid - consumption from (kWh):       [+]       ', num2str(GridOutEnergy(end))]);
disp(['Grid - supply to (kWh):              [-]       ', num2str(GridInpEnergy(end))]);
disp(['Battery charge energy loss (kWh):    [-]       ', num2str(BattInpLossEnergy(end))]);
disp(['Battery discharge energy loss (kWh): [-]       ', num2str(BattOutLossEnergy(end))]);
disp(['Battery state-of-charge start (kWh): [+]       ', num2str(BattSoC(1))]);
disp(['Battery state-of-charge end (kWh):   [-]       ', num2str(BattSoC(end))]);
disp(['Hsys electrolyser energy loss (kWh): [-]       ', num2str(HsysInpLossEnergy(end))]);
disp(['Hsys fuel cell energy loss (kWh):    [-]       ', num2str(HsysOutLossEnergy(end))]);
disp(['Hsys state-of-charge start (kWh):    [+]       ', num2str(HsysSoC(1))]);
disp(['Hsys state-of-charge end (kWh):      [-]       ', num2str(HsysSoC(end))]);
disp(['SUM (must-be-zero) (kWh):                      ', num2str(Balance)]);
disp(' ');
disp(['Max daily energy generation (kWh):             ', num2str(PvEnergyMax_Ammount)]);
disp(['Max daily energy generation (day):             ', num2str(PvEnergyMax_DayIndex)]);
disp(['Max daily energy consumption (kWh):            ', num2str(ConsEnergyMax_Ammount)]);
disp(['Max daily energy consumption (day):            ', num2str(ConsEnergyMax_DayIndex)]);
disp(' ');
disp(['Max daily energy excess (kWh):                 ' num2str(max(PvEnergyD-ConsEnergyD))]);
disp(['Max daily energy deficit (kWh):                ' num2str(min(PvEnergyD-ConsEnergyD))]);
disp(['Max momentary power excess (kW):               ' num2str(max(ExcessPower))]);
disp(['Max momentary power deficit (kW):              ' num2str(min(ExcessPower))]);
disp(' ');
disp('HYDROGEN MASS BALANCE');
disp(['Hydrogen produced (kg):              [+]       ', num2str(H2_MassProduced(end))]);
disp(['Hydrogen consumed by fuel cell (kg): [-]       ', num2str(H2_MassConsumed(end))]);
disp(['Hydrogen in the tank - start (kg):   [+]       ', num2str(H2_MassInTank(2))]);
disp(['Hydrogen in the tank - end (kg):     [-]       ', num2str(H2_MassInTank(end))]);
disp(['SUM (must-be-zero) (kg):                       ', num2str(BalanceH2)]);
disp(' ');
disp('HYDROGEN STORAGE VOLUME ESTIMATION');
disp(['Hsys state-of-charge MAX (kWh):                ', num2str(max(HsysSoC))]);
disp(['Hsys state-of-charge MIN (kWh):                ', num2str(min(HsysSoC))]);
disp(['Hsys state-of-charge DIF (kWh):                ', num2str(max(HsysSoC)-min(HsysSoC))]);
disp(' ');
disp('HYDROGEN SYSTEM PARAMETERS');
disp(['H2 tank capacity (kWh):                        ', num2str(HsysCapacity)]);
disp(['H2 tank capacity (kg):                         ', num2str(HsysCapacity/HHV_H2)]);
disp(['H2 tank capacity (m3 at 200 bar):              ', num2str(HsysCapacity/HHV_H2/Density_H2/200)]);
disp(['Electrolyser power (kW):                       ', num2str(HsysInpPowerMax)]);
disp(['Fuel cell power (kW):                          ', num2str(HsysOutPowerMax)]);
disp(['Electrolyser efficiency (1):                   ', num2str(HsysChgEff)]);
disp(['Fuel cell efficiency (1):                      ', num2str(HsysDisEff)]);
disp(' ');
disp('BATTERY PARAMETERS');
disp(['Capacity (kWh):                                ', num2str(BattCapacity)]);
disp(['Charge power max. (kW):                        ', num2str(BattInpPowerMax)]);
disp(['Discharge power max (kW):                      ', num2str(BattOutPowerMax)]);
disp(['Charge efficiency (1):                         ', num2str(BattChgEff)]);
disp(['Discharge efficiency (1):                      ', num2str(BattDisEff)]);
disp(' ');
disp('EQUIPMENT DEGRADATION FACTORS');
disp(['Battery Empty events:                          ', num2str(BattEmptyCounter)]);
disp(['Battery Full events:                           ', num2str(BattFullCounter)]);
disp(['Hsys Empty events:                             ', num2str(HsysEmptyCounter)]);
disp(['Hsys Full events:                              ', num2str(HsysFullCounter)]);
disp(['Electrolyser operation time total (h):         ', num2str(ElectrolyserOperationTime)]);
disp(['Electrolyser operation time effective (h):     ', num2str(ElectrolyserOperationTimeEff)]);
disp(['Fuel cell operation time total (h):            ', num2str(FuelCellOperationTime)]);
disp(['Fuel cell operation time effective (h):        ', num2str(FuelCellOperationTimeEff)]);
disp(' ');
disp('SIZES OF SYSTEM COMPONENTS');
disp(['Solar power plant (m2):                        ', num2str(PV_area)]);
disp(['Solar power plant (kWp):                       ', num2str(PV_area*0.165)]);
disp(['Electrolyser power (kW):                       ', num2str(HsysInpPowerMax)]);
disp(['Fuel cell power (kW):                          ', num2str(HsysOutPowerMax)]);
disp(['Hydrogen tank (kWh):                           ', num2str(HsysCapacity)]);
disp(['Hydrogen tank (kg):                            ', num2str(HsysCapacity/HHV_H2)]);
disp(['Hydrogen tank (m3):                            ', num2str(HsysTankVol)]);
disp(['Hydrogen tank max. pressure (bar):             ', num2str(HsysTankPmax)]);
disp(['Battery capacity (kWh):                        ', num2str(BattCapacity)]);
disp(['Battery charge power (kW):                     ', num2str(BattInpPowerMax)]);
disp(['Battery discharge power (kW):                  ', num2str(BattOutPowerMax)]);
disp(' ');
disp('CAPEX OF THE SYSTEM');
disp(['CAPEX - Solar power plant (EUR):               ', num2str(CAPEX_SolarPwrPlant)]);
disp(['CAPEX - Electrolyser (EUR):                    ', num2str(CAPEX_Electrolyser)]);
disp(['CAPEX - Fuel cell (EUR):                       ', num2str(CAPEX_FuelCell)]);
disp(['CAPEX - Hydrogen tank (EUR):                   ', num2str(CAPEX_HydrogenTank)]);
disp(['CAPEX - Battery (EUR):                         ', num2str(CAPEX_Battery)]);
disp(['CAPEX - TOTAL (EUR):                           ', num2str(CAPEX_Total)]);
disp(' ');
disp('ELECTRIC ENERGY PRICE');
disp(['Electric energy price Sol. pwr. pl. (EUR/MWh): ', num2str(ElPrice_SolarPwrPlant)]);
disp(['Electric energy price Electrolyser (EUR/MWh):  ', num2str(ElPrice_Electrolyser)]);
disp(['Electric energy price Fuel cell (EUR/MWh):     ', num2str(ElPrice_FuelCell)]);
disp(['Electric energy price Hydrogen tank (EUR/MWh): ', num2str(ElPrice_HydrogenTank)]);
disp(['Electric energy price Battery (EUR/MWh):       ', num2str(ElPrice_Battery)]);
disp(['Electric energy price TOTAL (EUR/MWh):         ', num2str(ElPrice_Total)]);


%% Display for table
disp(' ');
disp('TEST');
disp(['Solar power plant (m2):                        ', num2str(PV_area)]);
disp(['Battery Capacity (kWh):                        ', num2str(BattCapacity)]);
disp(['Battery max charge power (kW):                 ', num2str(BattInpPowerMax)]);
disp(['Battery max discharge power (kW): )]);         ', num2str(BattOutPowerMax)]);
disp(['Hsys state-of-charge DIF (kWh):                ', num2str(max(HsysSoC)-min(HsysSoC))]);
disp(['H2 tank capacity (kg):                         ', num2str((max(HsysSoC)-min(HsysSoC))/HHV_H2)]);
disp(['Electrolyser power (kW):                       ', num2str(HsysInpPowerMax)]);
disp(['Fuel cell power (kW):                          ', num2str(HsysOutPowerMax)]);
disp(['Electric energy production price (EUR/MWh):    ', num2str(ElPrice_Total)]);
disp(['PV energy (kWh):                     [+]       ', num2str(PvEnergy(end))]);
disp(['Consumed energy (kWh):               [-]       ', num2str(ConsEnergy(end))]);
disp(['Grid supply to (kWh):                [-]       ', num2str(GridInpEnergy(end))]);
disp(['Grid consumption from (kWh):         [+]       ', num2str(GridOutEnergy(end))]);
disp(['Hydrogen in the tank - start (kg):   [+]       ', num2str(H2_MassInTank(2))]);
disp(['Hydrogen in the tank - end (kg):     [-]       ', num2str(H2_MassInTank(end))]);
disp(['Electric energy price Sol. pwr. pl. (EUR/MWh): ', num2str(ElPrice_SolarPwrPlant)]);
disp(['Electric energy price Electrolyser (EUR/MWh):  ', num2str(ElPrice_Electrolyser)]);
disp(['Electric energy price Fuel cell (EUR/MWh):     ', num2str(ElPrice_FuelCell)]);
disp(['Electric energy price Hydrogen tank (EUR/MWh): ', num2str(ElPrice_HydrogenTank)]);
disp(['Electric energy price Battery (EUR/MWh):       ', num2str(ElPrice_Battery)]);
disp(['Electric energy price TOTAL (EUR/MWh):         ', num2str(ElPrice_Total)]);

%% Display results
% === Output results ===
fprintf("Local supply - Annual consumption: %.0f kWh\n", local_consumption_kWh);
fprintf("Local supply - Total supply cost:  %.4f EUR\n", YearPrice);
fprintf("Local supply - Final price per kWh: %.4f EUR/kWh\n", final_Local_price_per_kWh);
disp(' ');
fprintf("Grid supply - Annual consumption:  %.0f kWh\n", annual_consumption_kWh);
fprintf("Grid supply - Total supply cost:   %.2f EUR\n", cost_total);
fprintf("Grid supply - Final price per kWh (incl. all charges and VAT): %.4f EUR/kWh\n", final_price_per_kWh);
